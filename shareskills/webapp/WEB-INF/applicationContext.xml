<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/aop 
			            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			            http://www.springframework.org/schema/tx 
			            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			            http://www.springframework.org/schema/context 
			            http://www.springframework.org/schema/context/spring-context-3.0.xsd"
						>

    <!-- 开启注解处理器 -->
    <context:annotation-config/>
	<!-- <bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="url"
			value="jdbc:mysql://&lt;localhost&gt;[&lt;:3306&gt;]/&lt;sharedb&gt;">
		</property>
			<property name="url"
			value="jdbc:mysql://localhost:3306/sharedb;">
		</property>	
		<property name="username" value="root"></property>
		<property name="password" value="root"></property>
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
	</bean> -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	<!-- 	指定连接数据库的JDBC驱动 -->
		<property name="driverClass">
		 	<value>com.mysql.jdbc.Driver</value>
		 </property>
	<!-- 	连接数据库所用的URL -->
		<property name="jdbcUrl">
			<!--<value>jdbc:mysql://47.94.140.58/sharedb?useSSL=false</value>-->
			<value>jdbc:mysql://yiezi.ml/sharedb?useSSL=false</value>
		</property>

	<!-- 	连接数据库的用户名 -->
		<property name="user">
			<value>root</value>
		</property>
		<!-- 连接数据库的密码 -->
		<property name="password">
		<!--	<value>123456789</value>-->
			<value></value>
		</property>
	<!-- 	设置数据库连接池的最大连接数 -->
		<property name="maxPoolSize">
			<value>20</value>
		</property>
	<!-- 	设置数据库连接池的最小连接数 -->
		<property name="minPoolSize">
			<value>2</value>
		</property>
	<!-- 	设置数据库连接池的初始化连接数 -->
		<property name="initialPoolSize">
			<value>2</value>
		</property>
	<!-- 	设置数据库连接池的连接的最大空闲时间,单位为秒 -->
		<property name="maxIdleTime">
			<value>20</value>
		</property>
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<!-- 设置hibernate是否在在控制台输出sql语句调试阶段专用 -->
				<prop key="show_sql">true</prop>
				<!-- 设置hibernate一次最多提交sql数量 -->
				<prop key="hibernate.jdbc.batch._size">50</prop>
			</props>
		</property>
		<property name="mappingResources">
			<list>
				<value>/conf/TAdmin.hbm.xml</value>
				<value>/conf/TUser.hbm.xml</value>
				<value>/conf/TBlog.hbm.xml</value>
				<value>/conf/TBlogcategorytag.hbm.xml</value>
				<value>/conf/TDataresource.hbm.xml</value>
				<value>/conf/DataCategory.hbm.xml</value>
				<value>/conf/BlogoSphere.hbm.xml</value>
				<value>/conf/TBlogcomment.hbm.xml</value>
			<!-- 	<value>com/shareskill/model/TDataresource.hbm.xml</value> -->
				<!-- <value>com/shareskill/model/TBlog.hbm.xml</value>
				<value>
					com/shareskill/model/TBlogcategorytag.hbm.xml
				</value>
				<value>com/shareskill/model/TBlogcomment.hbm.xml</value>

				<value>
					com/shareskill/model/TLocalnetmemo.hbm.xml
				</value>
				 -->

				<!-- <value>com/shareskill/model/TBlog.hbm.xml</value> --></list>
		</property></bean>
		
	 <!-- 定义hibernate事务管理器transcationManager -->
<!-- 	<bean id="TransactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
	依赖注入上面定义的sessionFactory
        <property name="sessionFactory" ref="sessionFactory"/>
	</bean> -->
	
	<!--定义一个事务通知txadvice,配置事务传播特性-->
	<!-- <tx:advice id="txAdvice" transaction-manager="TransactionManager"> 
		<tx:attributes>
		所有已list/browse/get/load/is开头的方法不需要事务控制
			<tx:method name="browse*" propagation="NOT_SUPPORTED" read-only="true"/>
			<tx:method name="list*" propagation="NOT_SUPPORTED" read-only="true"/>
			<tx:method name="load*" propagation="NOT_SUPPORTED" read-only="true"/>
			<tx:method name="get*" propagation="NOT_SUPPORTED" read-only="true"/>
			<tx:method name="is*" propagation="NOT_SUPPORTED" read-only="true"/>
			设置所有方法均进行事务控制，如果当前没有事务，则新建一个事务
			<tx:method name="*" propagation="REQUIRED"/>
		</tx:attributes>
		</tx:advice> -->
		
	<!--基于AOP技术的事务管理实现-->
	<!-- <aop:config>
		定义一个事务切入点,拦截com.shareskill.service.impl包中所有类的所有方法
		<aop:pointcut id="transactionPointcut" expression="execution(* com.shareskill.serviceImp.*.*(..))" />
		引用txAdvice事务通知
		<aop:advisor advice-ref="txAdvice" pointcut-ref="transactionPointcut"/>
	</aop:config>	 -->
	<!--<bean id="massageSource" class="org.springframework."-->
	<!--装配HibernateTemplate实例-->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<constructor-arg ref="sessionFactory"/>
	</bean>		 
		
 	<bean id="dao" class="com.shareskill.dao.BaseDaoImp">
		<property name="hibernateTemplate">
			<ref bean="hibernateTemplate"/>
		 </property>
	</bean> 
	<bean id="adminService" class="com.shareskill.serviceImp.AdminServiceImp">
		<property name="dao">
			<ref bean="dao"/>
		</property>
	</bean>
	<bean id="AdminController" class="com.shareskill.controllerimp.AdminControllerImp">
		<property name="adminService">
			<ref bean="adminService"/>
		</property>
	</bean>
	<bean id="userService" class="com.shareskill.serviceImp.UserServiceImp">
		<property name="dao">
			<ref bean="dao"></ref>
		</property>
	</bean>
	<bean id="UserController" class="com.shareskill.controllerimp.UserControllerImp">
		<property name="userService">
			<ref bean="userService"></ref>
		</property>
	</bean>
	<bean id="categoryService" class="com.shareskill.serviceImp.CategoryServiceImp">
		<property name="dao">
			<ref bean="dao"></ref>
		</property>
	</bean>
	<bean id="categoryController" class="com.shareskill.controllerimp.CategoryContorllerImp">
		<property name="categoryService">
			<ref bean="categoryService"/>
		</property>

	</bean>
	<bean id="blogService" class="com.shareskill.serviceImp.BlogServiceImp">
		<property name="dao">
			<ref bean="dao"/>
		</property>
	</bean>
	<bean id="blogController" class="com.shareskill.controllerimp.BlogsControllerImp">
		<property name="blogService">
			<ref bean="blogService"/>
		</property>
	</bean>
	<bean id="dataResourceService" class="com.shareskill.serviceImp.DataResourceServiceImp">
		<property name="dao">
			<ref bean="dao"/>
		</property>
	</bean>

	<bean id="dataController" class="com.shareskill.controllerimp.DataControllerImp">
		<property name="dataResourceService">
			<ref bean="dataResourceService"/>
		</property>
	</bean>
	<bean id="dataCategoryService" class="com.shareskill.serviceImp.DataCategoryServiceImp">
		<property name="dao">
			<ref bean="dao"/>
		</property>
	</bean>
	<bean id="blogoSphereService" class="com.shareskill.serviceImp.BlogoSphereServiceImp">
		<property name="dao">
			<ref bean="dao"/>
		</property>
	</bean>
	<bean id="blogCommentService" class="com.shareskill.serviceImp.BlogCommentServiceImp">
		<property name="dao">
			<ref bean="dao"/>
		</property>
	</bean>
</beans>